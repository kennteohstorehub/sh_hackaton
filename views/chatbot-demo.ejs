<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chatbot Demo - Smart Queue Manager</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css" rel="stylesheet">
    <style>
        .chat-container {
            height: 500px;
            overflow-y: auto;
            border: 1px solid #dee2e6;
            border-radius: 8px;
            padding: 15px;
            background: #f8f9fa;
        }
        .message {
            margin-bottom: 15px;
            display: flex;
            align-items: flex-start;
        }
        .message.user {
            justify-content: flex-end;
        }
        .message.bot {
            justify-content: flex-start;
        }
        .message-bubble {
            max-width: 70%;
            padding: 10px 15px;
            border-radius: 18px;
            word-wrap: break-word;
        }
        .message.user .message-bubble {
            background: #007bff;
            color: white;
        }
        .message.bot .message-bubble {
            background: white;
            border: 1px solid #dee2e6;
            color: #333;
        }
        .message-avatar {
            width: 32px;
            height: 32px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 14px;
            margin: 0 8px;
        }
        .message.user .message-avatar {
            background: #007bff;
            color: white;
            order: 2;
        }
        .message.bot .message-avatar {
            background: #28a745;
            color: white;
        }
        .typing-indicator {
            display: none;
        }
        .typing-indicator.show {
            display: flex;
        }
        .typing-dots {
            display: flex;
            align-items: center;
            gap: 4px;
        }
        .typing-dots span {
            width: 8px;
            height: 8px;
            border-radius: 50%;
            background: #6c757d;
            animation: typing 1.4s infinite ease-in-out;
        }
        .typing-dots span:nth-child(1) { animation-delay: -0.32s; }
        .typing-dots span:nth-child(2) { animation-delay: -0.16s; }
        @keyframes typing {
            0%, 80%, 100% { transform: scale(0); }
            40% { transform: scale(1); }
        }
        .quick-replies {
            display: flex;
            flex-wrap: wrap;
            gap: 8px;
            margin-top: 10px;
        }
        .quick-reply-btn {
            font-size: 0.8rem;
            padding: 4px 12px;
        }
    </style>
</head>
<body class="bg-light">
    <nav class="navbar navbar-expand-lg navbar-dark bg-primary">
        <div class="container">
            <a class="navbar-brand" href="/">
                <i class="bi bi-chat-dots me-2"></i>Chatbot Demo
            </a>
            <div class="navbar-nav ms-auto">
                <a class="nav-link" href="/dashboard">Dashboard</a>
            </div>
        </div>
    </nav>

    <div class="container py-4">
        <div class="row justify-content-center">
            <div class="col-md-8">
                <div class="card">
                    <div class="card-header bg-primary text-white">
                        <h5 class="mb-0">
                            <i class="bi bi-whatsapp me-2"></i>WhatsApp Chatbot Simulator
                        </h5>
                        <small>Test the customer-facing chatbot experience</small>
                    </div>
                    <div class="card-body p-0">
                        <!-- Chat Messages -->
                        <div class="chat-container" id="chatContainer">
                            <div class="message bot">
                                <div class="message-avatar">
                                    <i class="bi bi-robot"></i>
                                </div>
                                <div class="message-bubble">
                                    üè™ Welcome to Demo Restaurant!<br><br>
                                    How can I help you today?<br><br>
                                    1Ô∏è‚É£ Join Queue<br>
                                    2Ô∏è‚É£ Check Status<br>
                                    3Ô∏è‚É£ Cancel Booking<br>
                                    4Ô∏è‚É£ Business Hours<br><br>
                                    Reply with a number or type your request.
                                </div>
                            </div>
                        </div>

                        <!-- Typing Indicator -->
                        <div class="message bot typing-indicator" id="typingIndicator">
                            <div class="message-avatar">
                                <i class="bi bi-robot"></i>
                            </div>
                            <div class="message-bubble">
                                <div class="typing-dots">
                                    <span></span>
                                    <span></span>
                                    <span></span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="card-footer">
                        <!-- Quick Replies -->
                        <div class="quick-replies mb-3">
                            <button class="btn btn-outline-primary btn-sm quick-reply-btn" onclick="sendQuickReply('1')">
                                üéØ Join Queue
                            </button>
                            <button class="btn btn-outline-primary btn-sm quick-reply-btn" onclick="sendQuickReply('2')">
                                üìä Check Status
                            </button>
                            <button class="btn btn-outline-primary btn-sm quick-reply-btn" onclick="sendQuickReply('3')">
                                ‚ùå Cancel
                            </button>
                            <button class="btn btn-outline-primary btn-sm quick-reply-btn" onclick="sendQuickReply('menu')">
                                üìã Menu
                            </button>
                        </div>

                        <!-- Message Input -->
                        <div class="input-group">
                            <input type="text" class="form-control" id="messageInput" placeholder="Type your message..." onkeypress="handleKeyPress(event)">
                            <button class="btn btn-primary" onclick="sendMessage()">
                                <i class="bi bi-send"></i>
                            </button>
                        </div>

                        <!-- Phone Number Input -->
                        <div class="mt-2">
                            <small class="text-muted">
                                Phone Number: 
                                <input type="text" class="form-control form-control-sm d-inline-block" style="width: 150px;" id="phoneNumber" value="+1234567890" placeholder="+1234567890">
                                <button class="btn btn-sm btn-outline-secondary ms-2" onclick="clearSession()">
                                    <i class="bi bi-arrow-clockwise me-1"></i>Reset Chat
                                </button>
                            </small>
                        </div>
                    </div>
                </div>

                <!-- Session Info -->
                <div class="card mt-3">
                    <div class="card-header">
                        <h6 class="mb-0">Session Information</h6>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <strong>State:</strong> <span id="sessionState" class="badge bg-secondary">initial</span>
                            </div>
                            <div class="col-md-6">
                                <strong>In Queue:</strong> <span id="inQueue" class="badge bg-secondary">No</span>
                            </div>
                        </div>
                        <div class="row mt-2">
                            <div class="col-md-6">
                                <strong>Queue ID:</strong> <span id="queueId" class="text-muted">None</span>
                            </div>
                            <div class="col-md-6">
                                <strong>Position:</strong> <span id="position" class="text-muted">None</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        let currentPhoneNumber = '+1234567890';

        function handleKeyPress(event) {
            if (event.key === 'Enter') {
                sendMessage();
            }
        }

        function sendQuickReply(message) {
            document.getElementById('messageInput').value = message;
            sendMessage();
        }

        async function sendMessage() {
            const messageInput = document.getElementById('messageInput');
            const phoneInput = document.getElementById('phoneNumber');
            const message = messageInput.value.trim();
            const phoneNumber = phoneInput.value.trim() || '+1234567890';

            if (!message) return;

            // Update current phone number
            currentPhoneNumber = phoneNumber;

            // Add user message to chat
            addMessage(message, 'user');
            messageInput.value = '';

            // Show typing indicator
            showTyping();

            try {
                // Send message to chatbot API
                const response = await fetch('/api/chatbot/test', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        phoneNumber: phoneNumber,
                        message: message,
                        platform: 'whatsapp'
                    })
                });

                const data = await response.json();

                // Hide typing indicator
                hideTyping();

                if (data.success) {
                    // Add bot response
                    addMessage(data.message, 'bot');
                    
                    // Update session info
                    updateSessionInfo(data.sessionState);
                } else {
                    addMessage('Sorry, I encountered an error. Please try again.', 'bot');
                }
            } catch (error) {
                console.error('Error sending message:', error);
                hideTyping();
                addMessage('Sorry, I\'m having trouble connecting. Please try again.', 'bot');
            }
        }

        function addMessage(text, sender) {
            const chatContainer = document.getElementById('chatContainer');
            const messageDiv = document.createElement('div');
            messageDiv.className = `message ${sender}`;
            
            const avatar = document.createElement('div');
            avatar.className = 'message-avatar';
            avatar.innerHTML = sender === 'user' ? '<i class="bi bi-person"></i>' : '<i class="bi bi-robot"></i>';
            
            const bubble = document.createElement('div');
            bubble.className = 'message-bubble';
            bubble.innerHTML = text.replace(/\n/g, '<br>');
            
            messageDiv.appendChild(avatar);
            messageDiv.appendChild(bubble);
            chatContainer.appendChild(messageDiv);
            
            // Scroll to bottom
            chatContainer.scrollTop = chatContainer.scrollHeight;
        }

        function showTyping() {
            document.getElementById('typingIndicator').classList.add('show');
            const chatContainer = document.getElementById('chatContainer');
            chatContainer.scrollTop = chatContainer.scrollHeight;
        }

        function hideTyping() {
            document.getElementById('typingIndicator').classList.remove('show');
        }

        function updateSessionInfo(state) {
            // Get session info
            getSessionInfo();
        }

        async function getSessionInfo() {
            try {
                const response = await fetch(`/api/chatbot/session/${encodeURIComponent(currentPhoneNumber)}`);
                const data = await response.json();

                if (data.success) {
                    const session = data.session;
                    document.getElementById('sessionState').textContent = session.state;
                    document.getElementById('sessionState').className = `badge bg-${session.inQueue ? 'success' : 'secondary'}`;
                    document.getElementById('inQueue').textContent = session.inQueue ? 'Yes' : 'No';
                    document.getElementById('inQueue').className = `badge bg-${session.inQueue ? 'success' : 'secondary'}`;
                    document.getElementById('queueId').textContent = session.queueId || 'None';
                    document.getElementById('position').textContent = session.position || 'None';
                }
            } catch (error) {
                console.error('Error getting session info:', error);
            }
        }

        async function clearSession() {
            try {
                await fetch(`/api/chatbot/session/${encodeURIComponent(currentPhoneNumber)}`, {
                    method: 'DELETE'
                });
                
                // Clear chat
                const chatContainer = document.getElementById('chatContainer');
                chatContainer.innerHTML = `
                    <div class="message bot">
                        <div class="message-avatar">
                            <i class="bi bi-robot"></i>
                        </div>
                        <div class="message-bubble">
                            üè™ Welcome to Demo Restaurant!<br><br>
                            How can I help you today?<br><br>
                            1Ô∏è‚É£ Join Queue<br>
                            2Ô∏è‚É£ Check Status<br>
                            3Ô∏è‚É£ Cancel Booking<br>
                            4Ô∏è‚É£ Business Hours<br><br>
                            Reply with a number or type your request.
                        </div>
                    </div>
                `;
                
                // Reset session info
                document.getElementById('sessionState').textContent = 'initial';
                document.getElementById('sessionState').className = 'badge bg-secondary';
                document.getElementById('inQueue').textContent = 'No';
                document.getElementById('inQueue').className = 'badge bg-secondary';
                document.getElementById('queueId').textContent = 'None';
                document.getElementById('position').textContent = 'None';
                
            } catch (error) {
                console.error('Error clearing session:', error);
            }
        }

        // Initialize session info on page load
        document.addEventListener('DOMContentLoaded', function() {
            getSessionInfo();
        });
    </script>
</body>
</html> 