<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            color: #333;
        }
        
        .header {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            padding: 1rem 2rem;
            box-shadow: 0 2px 20px rgba(0,0,0,0.1);
            display: flex;
            justify-content: space-between;
            align-items: center;
            position: sticky;
            top: 0;
            z-index: 100;
        }
        
        .header h1 {
            color: rgb(255, 140, 0);
            font-size: 1.5rem;
            font-weight: bold;
        }
        
        .nav {
            display: flex;
            gap: 2rem;
        }
        
        .nav a {
            text-decoration: none;
            color: #666;
            font-weight: 500;
            padding: 0.5rem 1rem;
            border-radius: 5px;
            transition: all 0.3s;
        }
        
        .nav a:hover {
            background: rgba(255, 140, 0, 0.1);
            color: rgb(255, 140, 0);
        }
        
        .nav a.active {
            background: rgb(255, 140, 0);
            color: white;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 2rem;
        }
        
        .section {
            background: white;
            padding: 2rem;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            margin-bottom: 2rem;
        }
        
        .section h2 {
            margin-bottom: 1.5rem;
            color: #333;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        
        .section h2 i {
            color: rgb(255, 140, 0);
        }
        
        .status-banner {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 1rem 1.5rem;
            border-radius: 8px;
            margin-bottom: 2rem;
            border: 1px solid;
        }
        
        .status-banner.connected {
            background: #d4edda;
            border-color: #c3e6cb;
            color: #155724;
        }
        
        .status-banner.waiting {
            background: #fff3cd;
            border-color: #ffeaa7;
            color: #856404;
        }
        
        .status-banner.disconnected {
            background: #f8d7da;
            border-color: #f5c6cb;
            color: #721c24;
        }
        
        .status-content {
            display: flex;
            align-items: center;
            gap: 1rem;
        }
        
        .status-icon {
            font-size: 1.5rem;
        }
        
        .status-text h3 {
            margin: 0;
            font-size: 1.1rem;
            font-weight: 600;
        }
        
        .status-text p {
            margin: 0;
            font-size: 0.9rem;
            opacity: 0.8;
        }
        
        .btn {
            background: rgb(255, 140, 0);
            color: white;
            padding: 0.75rem 1.5rem;
            border: none;
            border-radius: 5px;
            text-decoration: none;
            display: inline-block;
            cursor: pointer;
            transition: background 0.3s;
            font-size: 1rem;
            font-weight: 500;
        }
        
        .btn:hover {
            background: rgb(230, 126, 0);
        }
        
        .btn-secondary {
            background: #6c757d;
        }
        
        .btn-secondary:hover {
            background: #5a6268;
        }
        
        .btn-danger {
            background: #dc3545;
        }
        
        .btn-danger:hover {
            background: #c82333;
        }
        
        .btn:disabled {
            background: #ccc;
            cursor: not-allowed;
        }
        
        .connection-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 2rem;
            margin-bottom: 2rem;
        }
        
        .qr-container {
            text-align: center;
            padding: 2rem;
            background: #f8f9fa;
            border-radius: 10px;
            border: 2px dashed #dee2e6;
        }
        
        .qr-code {
            max-width: 200px;
            width: 100%;
            height: auto;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }
        
        .connection-steps {
            background: #f8f9fa;
            padding: 1.5rem;
            border-radius: 10px;
        }
        
        .step {
            display: flex;
            align-items: flex-start;
            gap: 1rem;
            margin-bottom: 1.5rem;
            padding-bottom: 1.5rem;
            border-bottom: 1px solid #e9ecef;
        }
        
        .step:last-child {
            margin-bottom: 0;
            padding-bottom: 0;
            border-bottom: none;
        }
        
        .step-number {
            background: rgb(255, 140, 0);
            color: white;
            width: 30px;
            height: 30px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            font-size: 0.9rem;
            flex-shrink: 0;
        }
        
        .step-content h4 {
            margin-bottom: 0.5rem;
            color: #333;
            font-size: 1rem;
        }
        
        .step-content p {
            margin: 0;
            color: #666;
            font-size: 0.9rem;
            line-height: 1.4;
        }
        
        .device-info {
            background: #e8f5e8;
            padding: 1.5rem;
            border-radius: 10px;
            border-left: 4px solid #28a745;
        }
        
        .device-info h4 {
            color: #155724;
            margin-bottom: 1rem;
        }
        
        .device-details {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1rem;
        }
        
        .device-detail {
            display: flex;
            flex-direction: column;
        }
        
        .device-detail label {
            font-weight: 600;
            color: #495057;
            font-size: 0.9rem;
            margin-bottom: 0.25rem;
        }
        
        .device-detail span {
            color: #333;
            font-size: 1rem;
        }
        
        .features-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 1.5rem;
        }
        
        .feature-card {
            background: #f8f9fa;
            padding: 1.5rem;
            border-radius: 10px;
            text-align: center;
            border: 1px solid #e9ecef;
            transition: transform 0.3s, box-shadow 0.3s;
        }
        
        .feature-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        }
        
        .feature-icon {
            background: rgb(255, 140, 0);
            color: white;
            width: 50px;
            height: 50px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 1rem;
            font-size: 1.5rem;
        }
        
        .feature-card h4 {
            margin-bottom: 0.5rem;
            color: #333;
            font-size: 1.1rem;
        }
        
        .feature-card p {
            color: #666;
            font-size: 0.9rem;
            line-height: 1.4;
            margin: 0;
        }
        
        .loading-spinner {
            display: inline-block;
            width: 40px;
            height: 40px;
            border: 4px solid #f3f3f3;
            border-top: 4px solid rgb(255, 140, 0);
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin-bottom: 1rem;
        }
        
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        
        .alert {
            padding: 1rem 1.5rem;
            border-radius: 8px;
            margin-bottom: 1rem;
            border: 1px solid;
        }
        
        .alert-success {
            background: #d4edda;
            border-color: #c3e6cb;
            color: #155724;
        }
        
        .alert-warning {
            background: #fff3cd;
            border-color: #ffeaa7;
            color: #856404;
        }
        
        .alert-danger {
            background: #f8d7da;
            border-color: #f5c6cb;
            color: #721c24;
        }
        
        .text-center {
            text-align: center;
        }
        
        .hidden {
            display: none;
        }
        
        @media (max-width: 768px) {
            .header {
                flex-direction: column;
                gap: 1rem;
                padding: 1rem;
            }
            
            .nav {
                flex-wrap: wrap;
                justify-content: center;
            }
            
            .container {
                padding: 1rem;
            }
            
            .connection-grid {
                grid-template-columns: 1fr;
                gap: 1rem;
            }
            
            .features-grid {
                grid-template-columns: 1fr;
            }
            
            .device-details {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <header class="header">
        <h1>Smart Queue Manager</h1>
        <nav class="nav">
            <a href="/dashboard">Dashboard</a>
            <a href="/dashboard/whatsapp-setup" class="active">WhatsApp</a>
            <a href="/dashboard/analytics">Analytics</a>
            <a href="/dashboard/settings">Settings</a>
        </nav>
    </header>

    <div class="container">
        <!-- Connection Status Banner -->
        <div id="statusBanner" class="status-banner disconnected">
            <div class="status-content">
                <i id="statusIcon" class="status-icon bi bi-hourglass-split"></i>
                <div class="status-text">
                    <h3 id="statusTitle">Initializing WhatsApp Connection</h3>
                    <p id="statusMessage">Setting up WhatsApp integration...</p>
                </div>
            </div>
            <div>
                <button id="statusAction" class="btn btn-secondary" onclick="refreshConnection()">
                    <i class="bi bi-arrow-clockwise"></i> Refresh
                </button>
            </div>
        </div>

        <!-- Main Connection Section -->
        <div class="section">
            <h2><i class="bi bi-whatsapp"></i> WhatsApp Integration Setup</h2>
            
            <div class="connection-grid">
                <!-- QR Code Section -->
                <div id="qrSection" class="hidden">
                    <div class="qr-container">
                        <h4 style="margin-bottom: 1rem; color: #333;">Scan QR Code</h4>
                        <img id="qrCodeImage" src="" alt="QR Code" class="qr-code">
                        <p style="margin-top: 1rem; color: #666; font-size: 0.9rem;">
                            Open WhatsApp on your phone and scan this code
                        </p>
                    </div>
                </div>

                <!-- Loading Section -->
                <div id="loadingSection" class="text-center">
                    <div class="loading-spinner"></div>
                    <h4 style="color: #333; margin-bottom: 0.5rem;">Setting up connection...</h4>
                    <p style="color: #666;">Please wait while we initialize WhatsApp integration</p>
                </div>

                <!-- Connected Section -->
                <div id="connectedSection" class="hidden">
                    <div class="device-info">
                        <h4><i class="bi bi-check-circle-fill"></i> WhatsApp Connected Successfully!</h4>
                        <div class="device-details">
                            <div class="device-detail">
                                <label>Phone Number:</label>
                                <span id="devicePhone">Loading...</span>
                            </div>
                            <div class="device-detail">
                                <label>Device Name:</label>
                                <span id="deviceName">Loading...</span>
                            </div>
                            <div class="device-detail">
                                <label>Connected At:</label>
                                <span id="deviceConnectedAt">Loading...</span>
                            </div>
                        </div>
                        <div style="margin-top: 1.5rem;">
                            <button class="btn btn-danger" onclick="disconnectWhatsApp()">
                                <i class="bi bi-x-circle"></i> Disconnect WhatsApp
                            </button>
                        </div>
                    </div>
                </div>

                <!-- Error Section -->
                <div id="errorSection" class="hidden text-center">
                    <div class="alert alert-danger">
                        <i class="bi bi-exclamation-triangle-fill"></i>
                        <strong>Connection Error</strong><br>
                        <span id="errorMessage">Unable to establish WhatsApp connection</span>
                    </div>
                    <button class="btn" onclick="retryConnection()">
                        <i class="bi bi-arrow-clockwise"></i> Retry Connection
                    </button>
                </div>

                <!-- Setup Instructions -->
                <div class="connection-steps">
                    <h4 style="margin-bottom: 1.5rem; color: #333;">
                        <i class="bi bi-list-check"></i> How to Connect
                    </h4>
                    
                    <div class="step">
                        <div class="step-number">1</div>
                        <div class="step-content">
                            <h4>Open WhatsApp on your phone</h4>
                            <p>Make sure you have the latest version of WhatsApp installed on your mobile device.</p>
                        </div>
                    </div>
                    
                    <div class="step">
                        <div class="step-number">2</div>
                        <div class="step-content">
                            <h4>Go to Settings → Linked Devices</h4>
                            <p>Navigate to WhatsApp Settings, then tap on "Linked Devices" option.</p>
                        </div>
                    </div>
                    
                    <div class="step">
                        <div class="step-number">3</div>
                        <div class="step-content">
                            <h4>Tap "Link a Device"</h4>
                            <p>Select the option to link a new device to your WhatsApp account.</p>
                        </div>
                    </div>
                    
                    <div class="step">
                        <div class="step-number">4</div>
                        <div class="step-content">
                            <h4>Scan the QR code</h4>
                            <p>Point your phone's camera at the QR code that appears on the left side of this page.</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Features Section -->
        <div class="section">
            <h2><i class="bi bi-star"></i> WhatsApp Integration Features</h2>
            <div class="features-grid">
                <div class="feature-card">
                    <div class="feature-icon">
                        <i class="bi bi-chat-dots"></i>
                    </div>
                    <h4>Automated Notifications</h4>
                    <p>Customers receive automatic updates about their queue position and estimated wait times directly on WhatsApp.</p>
                </div>

                <div class="feature-card">
                    <div class="feature-icon">
                        <i class="bi bi-robot"></i>
                    </div>
                    <h4>Smart Chatbot</h4>
                    <p>AI-powered chatbot handles customer inquiries and queue management automatically, reducing staff workload.</p>
                </div>

                <div class="feature-card">
                    <div class="feature-icon">
                        <i class="bi bi-clock"></i>
                    </div>
                    <h4>Real-time Updates</h4>
                    <p>Instant notifications when it's the customer's turn or when queue status changes, keeping everyone informed.</p>
                </div>

                <div class="feature-card">
                    <div class="feature-icon">
                        <i class="bi bi-shield-check"></i>
                    </div>
                    <h4>Secure & Reliable</h4>
                    <p>End-to-end encrypted messages with reliable delivery through WhatsApp's trusted infrastructure.</p>
                </div>
            </div>
        </div>

        <!-- Benefits Section -->
        <div class="section">
            <h2><i class="bi bi-graph-up"></i> Business Benefits</h2>
            <div class="features-grid">
                <div class="feature-card">
                    <div class="feature-icon">
                        <i class="bi bi-people"></i>
                    </div>
                    <h4>Improved Customer Experience</h4>
                    <p>Customers can wait comfortably anywhere while staying updated about their queue status.</p>
                </div>

                <div class="feature-card">
                    <div class="feature-icon">
                        <i class="bi bi-speedometer2"></i>
                    </div>
                    <h4>Reduced Wait Times</h4>
                    <p>Better queue management and customer flow optimization leads to shorter overall wait times.</p>
                </div>

                <div class="feature-card">
                    <div class="feature-icon">
                        <i class="bi bi-cash-stack"></i>
                    </div>
                    <h4>Increased Revenue</h4>
                    <p>Happy customers are more likely to return and recommend your business to others.</p>
                </div>

                <div class="feature-card">
                    <div class="feature-icon">
                        <i class="bi bi-gear"></i>
                    </div>
                    <h4>Operational Efficiency</h4>
                    <p>Automated notifications reduce staff workload and improve overall operational efficiency.</p>
                </div>
            </div>
        </div>
    </div>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket = io();
        let isConnected = false;

        // DOM elements
        const statusBanner = document.getElementById('statusBanner');
        const statusIcon = document.getElementById('statusIcon');
        const statusTitle = document.getElementById('statusTitle');
        const statusMessage = document.getElementById('statusMessage');
        const statusAction = document.getElementById('statusAction');
        
        const qrSection = document.getElementById('qrSection');
        const loadingSection = document.getElementById('loadingSection');
        const connectedSection = document.getElementById('connectedSection');
        const errorSection = document.getElementById('errorSection');
        
        const qrCodeImage = document.getElementById('qrCodeImage');
        const devicePhone = document.getElementById('devicePhone');
        const deviceName = document.getElementById('deviceName');
        const deviceConnectedAt = document.getElementById('deviceConnectedAt');
        const errorMessage = document.getElementById('errorMessage');

        // Initialize page
        document.addEventListener('DOMContentLoaded', function() {
            setupSocketListeners();
            checkConnectionStatus();
        });

        function setupSocketListeners() {
            // WhatsApp QR code received
            socket.on('whatsapp-qr', function(data) {
                console.log('QR code received');
                showQRCode(data.qr);
                updateStatus('waiting', 'Scan QR Code', 'QR code is ready - scan with your WhatsApp to connect');
            });

            // WhatsApp ready
            socket.on('whatsapp-ready', function(data) {
                console.log('WhatsApp connected:', data);
                isConnected = true;
                showConnected(data.deviceInfo);
                updateStatus('connected', 'WhatsApp Connected', 'Successfully connected and ready to send notifications');
            });

            // WhatsApp disconnected
            socket.on('whatsapp-disconnected', function(data) {
                console.log('WhatsApp disconnected:', data.reason);
                isConnected = false;
                showError(`Connection lost: ${data.reason}`);
                updateStatus('disconnected', 'Connection Lost', data.reason);
            });
        }

        async function checkConnectionStatus() {
            try {
                const response = await fetch('/api/whatsapp/status');
                const status = await response.json();
                
                console.log('WhatsApp status:', status);
                
                if (status.isReady && status.deviceInfo) {
                    isConnected = true;
                    showConnected(status.deviceInfo);
                    updateStatus('connected', 'WhatsApp Connected', 'Successfully connected and ready to send notifications');
                } else if (status.status === 'waiting_for_scan' || status.hasQR) {
                    // Try to get QR code
                    const qrResponse = await fetch('/api/whatsapp/qr');
                    const qrData = await qrResponse.json();
                    
                    if (qrData.qrDataURL) {
                        showQRCode(qrData.qrDataURL);
                        updateStatus('waiting', 'Scan QR Code', 'QR code is ready - scan with your WhatsApp to connect');
                    } else {
                        showLoading();
                        updateStatus('disconnected', 'Generating QR Code', 'Please wait while we generate the QR code...');
                    }
                } else {
                    showLoading();
                    updateStatus('disconnected', 'Initializing Connection', 'Setting up WhatsApp integration...');
                }
            } catch (error) {
                console.error('Error checking connection status:', error);
                showError('Failed to check connection status');
                updateStatus('disconnected', 'Connection Error', 'Unable to check WhatsApp connection status');
            }
        }

        function updateStatus(status, title, message) {
            statusBanner.className = `status-banner ${status}`;
            statusTitle.textContent = title;
            statusMessage.textContent = message;
            
            // Update icon based on status
            if (status === 'connected') {
                statusIcon.className = 'status-icon bi bi-check-circle-fill';
                statusAction.innerHTML = '<i class="bi bi-gear"></i> Manage';
                statusAction.className = 'btn';
            } else if (status === 'waiting') {
                statusIcon.className = 'status-icon bi bi-qr-code';
                statusAction.innerHTML = '<i class="bi bi-arrow-clockwise"></i> Refresh';
                statusAction.className = 'btn btn-secondary';
            } else {
                statusIcon.className = 'status-icon bi bi-exclamation-triangle';
                statusAction.innerHTML = '<i class="bi bi-arrow-clockwise"></i> Retry';
                statusAction.className = 'btn btn-secondary';
            }
        }

        function showQRCode(qrDataURL) {
            hideAllSections();
            qrCodeImage.src = qrDataURL;
            qrSection.classList.remove('hidden');
        }

        function showConnected(deviceInfo) {
            hideAllSections();
            connectedSection.classList.remove('hidden');
            
            if (deviceInfo) {
                devicePhone.textContent = deviceInfo.phoneNumber || 'Unknown';
                deviceName.textContent = deviceInfo.deviceName || 'WhatsApp Device';
                const connectedDate = deviceInfo.connectedAt ? new Date(deviceInfo.connectedAt).toLocaleString() : 'Unknown';
                deviceConnectedAt.textContent = connectedDate;
            }
        }

        function showLoading() {
            hideAllSections();
            loadingSection.classList.remove('hidden');
        }

        function showError(message) {
            hideAllSections();
            errorMessage.textContent = message;
            errorSection.classList.remove('hidden');
        }

        function hideAllSections() {
            qrSection.classList.add('hidden');
            loadingSection.classList.add('hidden');
            connectedSection.classList.add('hidden');
            errorSection.classList.add('hidden');
        }

        async function disconnectWhatsApp() {
            if (confirm('Are you sure you want to disconnect WhatsApp? This will stop all customer notifications.')) {
                try {
                    const response = await fetch('/api/whatsapp/disconnect', { method: 'POST' });
                    if (response.ok) {
                        showLoading();
                        updateStatus('disconnected', 'Disconnecting...', 'Disconnecting from WhatsApp...');
                        setTimeout(checkConnectionStatus, 2000);
                    } else {
                        showError('Failed to disconnect WhatsApp');
                        updateStatus('disconnected', 'Disconnect Failed', 'Unable to disconnect WhatsApp');
                    }
                } catch (error) {
                    console.error('Error disconnecting:', error);
                    showError('Failed to disconnect WhatsApp');
                    updateStatus('disconnected', 'Disconnect Error', 'Error occurred while disconnecting');
                }
            }
        }

        function retryConnection() {
            showLoading();
            updateStatus('disconnected', 'Retrying Connection...', 'Attempting to reconnect...');
            setTimeout(checkConnectionStatus, 2000);
        }

        function refreshConnection() {
            checkConnectionStatus();
        }

        // Auto-refresh status every 30 seconds
        setInterval(() => {
            if (!isConnected) {
                checkConnectionStatus();
            }
        }, 30000);
    </script>
</body>
</html> 