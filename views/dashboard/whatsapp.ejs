<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>WhatsApp Connection - Smart Queue Manager</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/qrcode@1.5.3/build/qrcode.min.js"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: linear-gradient(135deg, #0a0a0a 0%, #1a1a1a 50%, #000000 100%);
            background-size: 400% 400%;
            animation: gradientShift 15s ease infinite;
            min-height: 100vh;
            color: #ffffff;
            overflow-x: hidden;
        }
        
        @keyframes gradientShift {
            0% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
            100% { background-position: 0% 50%; }
        }
        
        .header {
            background: rgba(0, 0, 0, 0.8);
            backdrop-filter: blur(20px);
            border-bottom: 1px solid rgba(255, 140, 0, 0.3);
            padding: 1rem 2rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
            position: sticky;
            top: 0;
            z-index: 100;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.5);
        }
        
        .header h1 {
            background: linear-gradient(135deg, #ff8c00, #ff6b35);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            font-size: 1.8rem;
            font-weight: 700;
            letter-spacing: -0.5px;
        }
        
        .nav-link {
            text-decoration: none;
            color: rgba(255, 255, 255, 0.8);
            font-weight: 500;
            padding: 0.75rem 1.5rem;
            border-radius: 12px;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            position: relative;
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 140, 0, 0.2);
        }
        
        .nav-link:hover {
            background: rgba(255, 140, 0, 0.2);
            color: white;
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(255, 140, 0, 0.3);
        }
        
        .container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 2rem;
        }
        
        .whatsapp-section {
            background: rgba(255, 140, 0, 0.1);
            backdrop-filter: blur(20px);
            border: 1px solid rgba(255, 140, 0, 0.3);
            padding: 2.5rem;
            border-radius: 20px;
            margin-bottom: 2rem;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
            transition: all 0.3s ease;
        }
        
        .whatsapp-section:hover {
            transform: translateY(-4px);
            box-shadow: 0 16px 48px rgba(255, 140, 0, 0.2);
        }
        
        .section-header {
            display: flex;
            align-items: center;
            gap: 1rem;
            margin-bottom: 2rem;
            padding-bottom: 1.5rem;
            border-bottom: 1px solid rgba(255, 140, 0, 0.3);
        }
        
        .section-header h2 {
            margin: 0;
            color: rgba(255, 255, 255, 0.9);
            font-weight: 600;
            font-size: 1.8rem;
        }
        
        .fab.fa-whatsapp {
            color: #25D366;
            font-size: 2rem;
            animation: pulse 2s ease-in-out infinite;
        }
        
        @keyframes pulse {
            0%, 100% { transform: scale(1); }
            50% { transform: scale(1.05); }
        }
        
        .status-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 2rem;
            margin-bottom: 3rem;
        }
        
        .status-card {
            background: rgba(255, 140, 0, 0.1);
            backdrop-filter: blur(20px);
            border: 1px solid rgba(255, 140, 0, 0.3);
            padding: 2rem;
            border-radius: 16px;
            transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
            position: relative;
            overflow: hidden;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
        }
        
        .status-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: linear-gradient(135deg, rgba(255, 140, 0, 0.2), rgba(255, 140, 0, 0.1));
            opacity: 0;
            transition: opacity 0.3s ease;
        }
        
        .status-card:hover {
            transform: translateY(-8px) scale(1.02);
            box-shadow: 0 20px 60px rgba(255, 140, 0, 0.3);
        }
        
        .status-card:hover::before {
            opacity: 1;
        }
        
        .status-card h6 {
            color: rgba(255, 255, 255, 0.9);
            font-weight: 600;
            margin-bottom: 1rem;
            position: relative;
            z-index: 1;
        }
        
        .connection-status {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            margin-bottom: 1rem;
            position: relative;
            z-index: 1;
        }
        
        .status-indicator {
            width: 12px;
            height: 12px;
            border-radius: 50%;
            position: relative;
            animation: statusPulse 2s ease-in-out infinite;
        }
        
        @keyframes statusPulse {
            0%, 100% { box-shadow: 0 0 0 0 currentColor; }
            50% { box-shadow: 0 0 0 8px transparent; }
        }
        
        .status-connected { 
            background-color: #25D366;
            color: #25D366;
        }
        .status-waiting { 
            background-color: #ffc107;
            color: #ffc107;
        }
        .status-disconnected { 
            background-color: #dc3545;
            color: #dc3545;
        }
        
        .status-text {
            font-weight: 500;
            font-size: 1.1rem;
            color: rgba(255, 255, 255, 0.9);
        }
        
        .status-message {
            color: rgba(255, 255, 255, 0.7);
            font-size: 0.875rem;
            margin-bottom: 1.5rem;
            position: relative;
            z-index: 1;
        }
        
        .btn {
            background: linear-gradient(135deg, #ff8c00, #ff6b35);
            color: white;
            padding: 0.875rem 2rem;
            border: none;
            border-radius: 12px;
            text-decoration: none;
            display: inline-block;
            cursor: pointer;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            font-weight: 600;
            font-size: 0.95rem;
            box-shadow: 0 4px 15px rgba(255, 140, 0, 0.3);
            position: relative;
            overflow: hidden;
            z-index: 1;
        }
        
        .btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
            transition: left 0.5s;
        }
        
        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(255, 140, 0, 0.4);
        }
        
        .btn:hover::before {
            left: 100%;
        }
        
        .btn-outline-danger {
            background: transparent;
            border: 1px solid #dc3545;
            color: #dc3545;
            box-shadow: 0 4px 15px rgba(220, 53, 69, 0.3);
        }
        
        .btn-outline-danger:hover {
            background: #dc3545;
            color: white;
            box-shadow: 0 8px 25px rgba(220, 53, 69, 0.4);
        }
        
        .btn:disabled {
            opacity: 0.5;
            cursor: not-allowed;
            transform: none !important;
        }
        
        .btn-sm {
            padding: 0.625rem 1.5rem;
            font-size: 0.875rem;
        }
        
        .qr-section {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 3rem;
            align-items: start;
        }
        
        @media (max-width: 768px) {
            .qr-section {
                grid-template-columns: 1fr;
                gap: 2rem;
            }
        }
        
        .qr-container {
            background: rgba(37, 211, 102, 0.1);
            backdrop-filter: blur(20px);
            border: 2px solid rgba(37, 211, 102, 0.3);
            border-radius: 20px;
            padding: 2.5rem;
            text-align: center;
            position: relative;
            overflow: hidden;
            box-shadow: 0 8px 32px rgba(37, 211, 102, 0.15);
            transition: all 0.3s ease;
        }
        
        .qr-container::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: conic-gradient(from 0deg, transparent, rgba(37, 211, 102, 0.3), transparent);
            animation: rotate 4s linear infinite;
            z-index: -1;
        }
        
        .qr-container::after {
            content: '';
            position: absolute;
            inset: 2px;
            background: rgba(0, 0, 0, 0.8);
            border-radius: 18px;
            z-index: -1;
        }
        
        @keyframes rotate {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        
        .qr-container:hover {
            transform: translateY(-4px);
            box-shadow: 0 16px 48px rgba(37, 211, 102, 0.25);
        }
        
        .qr-code-display {
            position: relative;
            z-index: 10;
        }
        
        .qr-code-display img {
            border-radius: 12px;
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
            transition: transform 0.3s ease;
            background: white;
            padding: 12px;
        }
        
        .qr-code-display img:hover {
            transform: scale(1.05);
        }
        
        .qr-title {
            color: #25D366;
            font-weight: 600;
            margin-bottom: 1rem;
            font-size: 1.2rem;
            position: relative;
            z-index: 10;
        }
        
        .qr-description {
            color: rgba(255, 255, 255, 0.8);
            font-size: 0.9rem;
            margin-top: 1rem;
            position: relative;
            z-index: 10;
        }
        
        .connection-steps {
            background: rgba(255, 140, 0, 0.1);
            backdrop-filter: blur(20px);
            border: 1px solid rgba(255, 140, 0, 0.3);
            border-radius: 20px;
            padding: 2.5rem;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
        }
        
        .steps-header {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            margin-bottom: 2rem;
            padding-bottom: 1.5rem;
            border-bottom: 1px solid rgba(255, 140, 0, 0.3);
        }
        
        .steps-header h6 {
            font-weight: 600;
            margin: 0;
            color: rgba(255, 255, 255, 0.9);
            font-size: 1.2rem;
        }
        
        .step {
            display: flex;
            align-items: flex-start;
            gap: 1rem;
            margin-bottom: 1.5rem;
            padding: 1.5rem;
            border-radius: 16px;
            background: rgba(37, 211, 102, 0.05);
            border: 1px solid rgba(37, 211, 102, 0.1);
            transition: all 0.3s ease;
        }
        
        .step:hover {
            background: rgba(37, 211, 102, 0.1);
            border-color: rgba(37, 211, 102, 0.3);
            transform: translateX(4px);
        }
        
        .step-number {
            background: linear-gradient(135deg, #25D366, #20B858);
            color: white;
            width: 36px;
            height: 36px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 0.9rem;
            font-weight: 600;
            flex-shrink: 0;
            box-shadow: 0 4px 12px rgba(37, 211, 102, 0.3);
        }
        
        .step-content {
            flex: 1;
            padding-top: 0.25rem;
        }
        
        .step-title {
            font-weight: 500;
            color: rgba(255, 255, 255, 0.9);
            margin-bottom: 0.5rem;
            font-size: 1rem;
        }
        
        .step-description {
            color: rgba(255, 255, 255, 0.7);
            font-size: 0.875rem;
            line-height: 1.4;
        }
        
        .alert-info {
            background: rgba(37, 211, 102, 0.1);
            border: 1px solid rgba(37, 211, 102, 0.3);
            color: rgba(255, 255, 255, 0.9);
            border-radius: 12px;
            padding: 1.25rem;
            margin-top: 2rem;
            backdrop-filter: blur(10px);
        }
        
        .alert-info .fas {
            color: #25D366;
            margin-right: 0.75rem;
        }
        
        .messages-section {
            background: rgba(255, 140, 0, 0.1);
            backdrop-filter: blur(20px);
            border: 1px solid rgba(255, 140, 0, 0.3);
            border-radius: 20px;
            padding: 2.5rem;
            margin-top: 2rem;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
            animation: slideUp 0.5s ease-out;
        }
        
        @keyframes slideUp {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
        
        .messages-header {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            margin-bottom: 2rem;
            padding-bottom: 1.5rem;
            border-bottom: 1px solid rgba(255, 140, 0, 0.3);
        }
        
        .messages-header h6 {
            font-weight: 600;
            margin: 0;
            color: rgba(255, 255, 255, 0.9);
            font-size: 1.2rem;
        }
        
        .message-item {
            background: rgba(0, 0, 0, 0.3);
            border: 1px solid rgba(255, 140, 0, 0.2);
            border-radius: 12px;
            padding: 1.5rem;
            margin-bottom: 1rem;
            transition: all 0.3s ease;
            backdrop-filter: blur(10px);
        }
        
        .message-item:hover {
            border-color: rgba(255, 140, 0, 0.4);
            transform: translateX(4px);
            background: rgba(255, 140, 0, 0.05);
        }
        
        .message-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 0.75rem;
        }
        
        .message-sender {
            font-weight: 600;
            color: #25D366;
            font-size: 1rem;
        }
        
        .message-time {
            color: rgba(255, 255, 255, 0.6);
            font-size: 0.75rem;
        }
        
        .message-from {
            color: rgba(255, 255, 255, 0.7);
            font-size: 0.8rem;
            margin-bottom: 0.5rem;
        }
        
        .message-content {
            color: rgba(255, 255, 255, 0.9);
            line-height: 1.5;
        }
        
        .spinner-border {
            color: #25D366 !important;
        }
        
        .loading-text {
            color: rgba(255, 255, 255, 0.7);
            font-size: 0.875rem;
            margin-top: 1rem;
        }
        
        .success-state {
            text-align: center;
            padding: 2rem;
            color: #25D366;
        }
        
        .success-state i {
            font-size: 3rem;
            margin-bottom: 1rem;
            animation: successPulse 2s ease-in-out infinite;
        }
        
        @keyframes successPulse {
            0%, 100% { transform: scale(1); opacity: 0.8; }
            50% { transform: scale(1.1); opacity: 1; }
        }
        
        .success-state h5 {
            font-weight: 600;
            margin-bottom: 0.5rem;
            color: rgba(255, 255, 255, 0.9);
        }
        
        .error-state {
            text-align: center;
            padding: 2rem;
            color: #dc3545;
        }
        
        .error-state i {
            font-size: 3rem;
            margin-bottom: 1rem;
        }
        
        /* Responsive design */
        @media (max-width: 768px) {
            .container {
                padding: 1rem;
            }
            
            .status-grid {
                grid-template-columns: 1fr;
                gap: 1rem;
            }
            
            .whatsapp-section {
                padding: 1.5rem;
            }
            
            .qr-container, .connection-steps {
                padding: 1.5rem;
            }
            
            .step {
                padding: 1rem;
            }
        }
        
        /* Focus states for accessibility */
        .btn:focus,
        .status-card:focus-within {
            outline: 2px solid #25D366;
            outline-offset: 2px;
        }
    </style>
</head>
<body>
    <!-- Header -->
    <div class="header">
        <h1>
            <i class="fab fa-whatsapp me-2"></i>
            WhatsApp Integration
        </h1>
        <a href="/dashboard" class="nav-link">
            <i class="fas fa-arrow-left me-2"></i>Back to Dashboard
        </a>
    </div>

    <div class="container">
        <!-- Main WhatsApp Section -->
        <div class="whatsapp-section">
            <div class="section-header">
                <i class="fab fa-whatsapp"></i>
                <h2>WhatsApp Business Connection</h2>
            </div>
            
            <!-- Status Grid -->
            <div class="status-grid">
                <div class="status-card">
                    <h6>Connection Status</h6>
                    <div class="connection-status">
                        <div class="status-indicator status-disconnected" id="status-indicator"></div>
                        <div class="status-text" id="status-text">Initializing...</div>
                    </div>
                    <div class="status-message" id="status-message">Setting up WhatsApp connection...</div>
                </div>
                
                <div class="status-card">
                    <h6>Quick Actions</h6>
                    <div style="display: flex; gap: 1rem; flex-wrap: wrap;">
                        <button class="btn btn-sm" onclick="refreshStatus()">
                            <i class="fas fa-sync-alt me-2"></i>Refresh Status
                        </button>
                        <button class="btn btn-outline-danger btn-sm" onclick="disconnect()" id="disconnect-btn" disabled>
                            <i class="fas fa-sign-out-alt me-2"></i>Disconnect
                        </button>
                    </div>
                </div>
            </div>

            <!-- QR Code Section -->
            <div class="qr-section">
                <div class="qr-container" id="qr-container">
                    <div class="qr-title">
                        <i class="fas fa-qrcode me-2"></i>Scan QR Code
                    </div>
                    <div class="qr-code-display" id="qr-display">
                        <div class="spinner-border" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                        <div class="loading-text">Generating secure QR code...</div>
                    </div>
                    <div class="qr-description">
                        Use your phone's WhatsApp camera to scan this code
                    </div>
                </div>
                
                <div class="connection-steps">
                    <div class="steps-header">
                        <i class="fas fa-mobile-alt" style="color: #25D366;"></i>
                        <h6>Connection Guide</h6>
                    </div>
                    
                    <div class="step">
                        <div class="step-number">1</div>
                        <div class="step-content">
                            <div class="step-title">Open WhatsApp</div>
                            <div class="step-description">Launch WhatsApp on your mobile device</div>
                        </div>
                    </div>
                    
                    <div class="step">
                        <div class="step-number">2</div>
                        <div class="step-content">
                            <div class="step-title">Access Settings</div>
                            <div class="step-description">Go to Settings → Linked Devices</div>
                        </div>
                    </div>
                    
                    <div class="step">
                        <div class="step-number">3</div>
                        <div class="step-content">
                            <div class="step-title">Link Device</div>
                            <div class="step-description">Tap "Link a Device" button</div>
                        </div>
                    </div>
                    
                    <div class="step">
                        <div class="step-number">4</div>
                        <div class="step-content">
                            <div class="step-title">Scan QR Code</div>
                            <div class="step-description">Point your camera at the QR code displayed here</div>
                        </div>
                    </div>
                    
                    <div class="step">
                        <div class="step-number">5</div>
                        <div class="step-content">
                            <div class="step-title">Confirm Connection</div>
                            <div class="step-description">Wait for the connection to be established</div>
                        </div>
                    </div>
                    
                    <div class="alert-info">
                        <i class="fas fa-shield-alt"></i>
                        <strong>Secure Connection:</strong> Your WhatsApp account will be safely linked to this system, just like WhatsApp Web. Your messages and data remain private and encrypted.
                    </div>
                </div>
            </div>
        </div>

        <!-- Recent Messages Section -->
        <div class="messages-section" id="messages-section" style="display: none;">
            <div class="messages-header">
                <i class="fas fa-comments" style="color: #25D366;"></i>
                <h6>Recent Messages</h6>
            </div>
            <div id="recent-messages">
                <div style="text-align: center; color: rgba(255, 255, 255, 0.6); padding: 2rem;">
                    <i class="fas fa-inbox fa-2x mb-3" style="opacity: 0.5;"></i>
                    <p class="mb-0">No recent messages</p>
                </div>
            </div>
        </div>
    </div>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket = io();
        let isConnected = false;

        // Initialize page
        document.addEventListener('DOMContentLoaded', function() {
            console.log('WhatsApp page loaded, initializing...');
            refreshStatus();
            setupSocketListeners();
            
            // Auto-refresh every 10 seconds if not connected
            setInterval(() => {
                if (!isConnected) {
                    console.log('Auto-refreshing WhatsApp status...');
                    refreshStatus();
                }
            }, 10000);
        });

        function setupSocketListeners() {
            // WhatsApp QR code
            socket.on('whatsapp-qr', function(data) {
                console.log('Received WhatsApp QR code');
                if (data.qr) {
                    displayQRCode(data.qr);
                }
                updateStatus('waiting_for_scan', 'Waiting for QR Scan', 'Please scan the QR code with your WhatsApp mobile app');
            });

            // WhatsApp ready
            socket.on('whatsapp-ready', function(data) {
                isConnected = true;
                updateStatus('connected', 'Connected Successfully', 'WhatsApp Business is connected and ready to send messages');
                hideQRCode();
                showMessagesSection();
                document.getElementById('disconnect-btn').disabled = false;
            });

            // WhatsApp disconnected
            socket.on('whatsapp-disconnected', function(data) {
                isConnected = false;
                updateStatus('disconnected', 'Connection Lost', `Disconnected: ${data.reason || 'Unknown reason'}`);
                showQRCode();
                hideMessagesSection();
                document.getElementById('disconnect-btn').disabled = true;
            });

            // WhatsApp message
            socket.on('whatsapp-message', function(data) {
                console.log('Received WhatsApp message:', data);
                addMessageToList(data);
            });
        }

        async function refreshStatus() {
            try {
                console.log('Refreshing WhatsApp status...');
                const response = await fetch('/api/whatsapp/status');
                const status = await response.json();
                
                console.log('WhatsApp status:', status);
                
                if (status.isConnected) {
                    isConnected = true;
                    updateStatus('connected', 'Connected Successfully', 'WhatsApp Business is connected and ready');
                    hideQRCode();
                    showMessagesSection();
                    document.getElementById('disconnect-btn').disabled = false;
                } else {
                    isConnected = false;
                    document.getElementById('disconnect-btn').disabled = true;
                    
                    // Try to get QR code
                    const qrResponse = await fetch('/api/whatsapp/qr');
                    const qrData = await qrResponse.json();
                    
                    if (qrData.qr && qrData.qrDataURL) {
                        // Display QR code using data URL from backend
                        displayQRCodeFromDataURL(qrData.qrDataURL);
                        updateStatus('waiting_for_scan', 'QR Code Ready', 'Scan the QR code with your WhatsApp mobile app');
                    } else if (qrData.qr) {
                        // Display QR code using string
                        displayQRCode(qrData.qr);
                        updateStatus('waiting_for_scan', 'QR Code Ready', 'Scan the QR code with your WhatsApp mobile app');
                    } else {
                        updateStatus('disconnected', 'Initializing Connection', 'Setting up WhatsApp Business integration...');
                        showInitializingMessage();
                    }
                }
            } catch (error) {
                console.error('Error refreshing status:', error);
                updateStatus('disconnected', 'Connection Error', 'Unable to establish connection. Please try again.');
                showErrorMessage();
            }
        }

        function displayQRCodeFromDataURL(dataURL) {
            const qrDisplay = document.getElementById('qr-display');
            qrDisplay.innerHTML = `
                <div style="text-align: center;">
                    <img src="${dataURL}" alt="WhatsApp QR Code" style="max-width: 280px; width: 100%; border-radius: 12px; background: white; padding: 12px; box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);">
                </div>
            `;
        }

        function showInitializingMessage() {
            const qrDisplay = document.getElementById('qr-display');
            qrDisplay.innerHTML = `
                <div style="text-align: center; padding: 2rem;">
                    <div class="spinner-border mb-3" role="status" style="width: 3rem; height: 3rem;">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <h6 style="color: rgba(255, 255, 255, 0.9); font-weight: 600; margin-bottom: 0.75rem;">
                        Initializing WhatsApp Business
                    </h6>
                    <p style="color: rgba(255, 255, 255, 0.7); font-size: 0.875rem; margin: 0;">
                        Setting up secure connection... This may take a few moments
                    </p>
                </div>
            `;
        }

        function showErrorMessage() {
            const qrDisplay = document.getElementById('qr-display');
            qrDisplay.innerHTML = `
                <div class="error-state">
                    <i class="fas fa-exclamation-triangle mb-3"></i>
                    <h6 style="color: rgba(255, 255, 255, 0.9); margin-bottom: 1rem;">Connection Failed</h6>
                    <p style="color: rgba(255, 255, 255, 0.7); font-size: 0.875rem; margin-bottom: 1.5rem;">
                        Unable to initialize WhatsApp connection
                    </p>
                    <button class="btn" onclick="refreshStatus()">
                        <i class="fas fa-sync-alt me-2"></i>Try Again
                    </button>
                </div>
            `;
        }

        function updateStatus(status, text, message) {
            const indicator = document.getElementById('status-indicator');
            const statusText = document.getElementById('status-text');
            const statusMessage = document.getElementById('status-message');
            
            // Update indicator
            indicator.className = `status-indicator status-${status}`;
            
            // Update text
            statusText.textContent = text;
            statusMessage.textContent = message;
        }

        function displayQRCode(qrString) {
            console.log('Displaying QR code:', qrString.substring(0, 50) + '...');
            const qrDisplay = document.getElementById('qr-display');
            qrDisplay.innerHTML = `
                <div id="qrcode"></div>
            `;
            
            // Try to generate QR code using qrcode.js library
            if (typeof QRCode !== 'undefined') {
                // Use QRCode library if available
                QRCode.toCanvas(document.getElementById('qrcode'), qrString, {
                    width: 280,
                    margin: 2,
                    color: {
                        dark: '#25D366',  // WhatsApp green
                        light: '#FFFFFF'
                    }
                }, function (error) {
                    if (error) {
                        console.error('QR Code generation error:', error);
                        fallbackQRDisplay(qrString);
                    } else {
                        // Style the canvas
                        const canvas = document.querySelector('#qrcode canvas');
                        if (canvas) {
                            canvas.style.borderRadius = '12px';
                            canvas.style.boxShadow = '0 8px 25px rgba(0, 0, 0, 0.3)';
                        }
                    }
                });
            } else {
                // Fallback: try to use the QR data URL from the API
                generateQRFromAPI(qrString);
            }
        }
        
        function generateQRFromAPI(qrString) {
            // Make another API call to get the QR data URL
            fetch('/api/whatsapp/qr')
                .then(response => response.json())
                .then(data => {
                    if (data.qrDataURL) {
                        document.getElementById('qrcode').innerHTML = `
                            <img src="${data.qrDataURL}" alt="WhatsApp QR Code" style="max-width: 280px; width: 100%; border-radius: 12px; box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);">
                        `;
                    } else {
                        fallbackQRDisplay(qrString);
                    }
                })
                .catch(error => {
                    console.error('Error getting QR from API:', error);
                    fallbackQRDisplay(qrString);
                });
        }

        function fallbackQRDisplay(qrString) {
            document.getElementById('qrcode').innerHTML = `
                <div class="alert-info" style="margin: 0;">
                    <div style="text-align: center;">
                        <i class="fab fa-whatsapp fa-3x mb-3" style="color: #25D366;"></i>
                        <h6 style="color: rgba(255, 255, 255, 0.9); margin-bottom: 1rem;">QR Code Generated</h6>
                        <p style="color: rgba(255, 255, 255, 0.7); font-size: 0.875rem; margin-bottom: 1rem;">
                            QR Code: ${qrString.substring(0, 50)}...
                        </p>
                        <p style="color: rgba(255, 255, 255, 0.7); font-size: 0.75rem; margin: 0;">
                            Check your terminal/console for the full QR code, or refresh this page
                        </p>
                    </div>
                </div>
            `;
        }

        function hideQRCode() {
            const qrDisplay = document.getElementById('qr-display');
            qrDisplay.innerHTML = `
                <div class="success-state">
                    <i class="fas fa-check-circle"></i>
                    <h5>Successfully Connected!</h5>
                    <p style="color: rgba(255, 255, 255, 0.7); margin: 0;">
                        WhatsApp Business is now integrated and ready to manage your customer communications.
                    </p>
                </div>
            `;
        }

        function showQRCode() {
            refreshStatus();
        }

        function showMessagesSection() {
            document.getElementById('messages-section').style.display = 'block';
        }

        function hideMessagesSection() {
            document.getElementById('messages-section').style.display = 'none';
        }

        function addMessageToList(messageData) {
            const messagesContainer = document.getElementById('recent-messages');
            
            // Create timestamp
            const messageTime = new Date().toLocaleTimeString();
            
            const messageHtml = `
                <div class="message-item">
                    <div class="message-header">
                        <div>
                            <div class="message-sender">${messageData.name || messageData.from}</div>
                            <div class="message-from">${messageData.from}</div>
                        </div>
                        <div class="message-time">${messageTime}</div>
                    </div>
                    <div class="message-content">${messageData.message}</div>
                </div>
            `;
            
            // If this is the first message, clear the "no messages" text
            if (messagesContainer.innerHTML.includes('No recent messages')) {
                messagesContainer.innerHTML = '';
            }
            
            // Add new message at the top
            messagesContainer.insertAdjacentHTML('afterbegin', messageHtml);
            
            // Keep only the last 10 messages
            const messages = messagesContainer.querySelectorAll('.message-item');
            if (messages.length > 10) {
                messages[messages.length - 1].remove();
            }
        }

        async function disconnect() {
            if (confirm('Are you sure you want to disconnect WhatsApp Business? This will stop all message notifications.')) {
                try {
                    updateStatus('disconnected', 'Disconnecting...', 'Safely disconnecting from WhatsApp Business...');
                    await fetch('/api/whatsapp/disconnect', { method: 'POST' });
                } catch (error) {
                    console.error('Error disconnecting:', error);
                    updateStatus('disconnected', 'Disconnect Error', 'Failed to disconnect properly. Please try again.');
                }
            }
        }
    </script>
</body>
</html> 