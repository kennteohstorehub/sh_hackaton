# Secure StoreHub Queue Management Deployment
# Multi-tenant application with strict security controls

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: storehubqms-app
  namespace: tenant-template
  labels:
    app: storehubqms
    tier: application
    security-level: high
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: storehubqms
      tier: application
  template:
    metadata:
      labels:
        app: storehubqms
        tier: application
        security-level: high
      annotations:
        container.apparmor.security.beta.kubernetes.io/storehubqms: runtime/default
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: tenant-app-sa
      automountServiceAccountToken: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 10001
        runAsGroup: 10001
        fsGroup: 10001
        seccompProfile:
          type: RuntimeDefault
      terminationGracePeriodSeconds: 30
      
      # Init container for database migration and security setup
      initContainers:
      - name: db-migrate
        image: storehubqms/migration:latest
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 10001
          runAsGroup: 10001
          capabilities:
            drop:
            - ALL
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: database-credentials
              key: url
        - name: TENANT_ID
          valueFrom:
            configMapKeyRef:
              name: tenant-config
              key: tenant-id
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        resources:
          limits:
            memory: "256Mi"
            cpu: "200m"
          requests:
            memory: "128Mi"
            cpu: "100m"
      
      containers:
      - name: storehubqms
        image: storehubqms/app:latest
        imagePullPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 10001
          runAsGroup: 10001
          capabilities:
            drop:
            - ALL
        
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        
        env:
        # Security Environment Variables
        - name: NODE_ENV
          value: "production"
        - name: USE_AUTH_BYPASS
          value: "false"
        - name: HELMET_ENABLED
          value: "true"
        - name: CSRF_PROTECTION
          value: "true"
        - name: RATE_LIMITING_ENABLED
          value: "true"
        
        # Database Configuration
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: database-credentials
              key: url
        - name: DATABASE_SSL
          value: "true"
        - name: DATABASE_SSL_REJECT_UNAUTHORIZED
          value: "true"
        
        # Session Configuration
        - name: SESSION_SECRET
          valueFrom:
            secretKeyRef:
              name: session-secrets
              key: secret
        - name: SESSION_SECURE
          value: "true"
        - name: SESSION_SAME_SITE
          value: "strict"
        
        # Tenant Configuration
        - name: TENANT_ID
          valueFrom:
            configMapKeyRef:
              name: tenant-config
              key: tenant-id
        - name: TENANT_DOMAIN
          valueFrom:
            configMapKeyRef:
              name: tenant-config
              key: domain
        
        # External Service URLs
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: redis-credentials
              key: url
        - name: WHATSAPP_API_URL
          valueFrom:
            configMapKeyRef:
              name: external-services
              key: whatsapp-api-url
              
        # Monitoring and Logging
        - name: LOG_LEVEL
          value: "info"
        - name: METRICS_ENABLED
          value: "true"
        - name: AUDIT_LOGGING
          value: "true"
        
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: app-cache
          mountPath: /app/cache
        - name: logs
          mountPath: /app/logs
        - name: config
          mountPath: /app/config
          readOnly: true
        
        resources:
          limits:
            memory: "1Gi"
            cpu: "500m"
            ephemeral-storage: "1Gi"
          requests:
            memory: "512Mi"
            cpu: "250m"
            ephemeral-storage: "512Mi"
        
        livenessProbe:
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        
        readinessProbe:
          httpGet:
            path: /ready
            port: http
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
          successThreshold: 1
        
        startupProbe:
          httpGet:
            path: /startup
            port: http
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 6
          successThreshold: 1
      
      # Sidecar container for security monitoring
      - name: security-monitor
        image: storehubqms/security-monitor:latest
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 10002
          runAsGroup: 10002
          capabilities:
            drop:
            - ALL
        
        env:
        - name: TENANT_ID
          valueFrom:
            configMapKeyRef:
              name: tenant-config
              key: tenant-id
        - name: SECURITY_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: monitoring-config
              key: security-endpoint
        
        volumeMounts:
        - name: logs
          mountPath: /logs
          readOnly: true
        - name: tmp
          mountPath: /tmp
        
        resources:
          limits:
            memory: "128Mi"
            cpu: "100m"
          requests:
            memory: "64Mi"
            cpu: "50m"
      
      volumes:
      - name: tmp
        emptyDir:
          sizeLimit: 256Mi
      - name: app-cache
        emptyDir:
          sizeLimit: 512Mi
      - name: logs
        emptyDir:
          sizeLimit: 1Gi
      - name: config
        configMap:
          name: app-config
          defaultMode: 0644
      
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - storehubqms
              topologyKey: kubernetes.io/hostname
      
      tolerations:
      - key: "tenant-workload"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"

---
# Service for the application
apiVersion: v1
kind: Service
metadata:
  name: storehubqms-service
  namespace: tenant-template
  labels:
    app: storehubqms
    tier: application
spec:
  type: ClusterIP
  ports:
  - port: 3000
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app: storehubqms
    tier: application

---
# Horizontal Pod Autoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: storehubqms-hpa
  namespace: tenant-template
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: storehubqms-app
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60

---
# Pod Disruption Budget
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: storehubqms-pdb
  namespace: tenant-template
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: storehubqms
      tier: application